import { Epic, combineEpics } from 'redux-observable'
import { RootAction, RootState, isActionOf } from 'typesafe-actions'
import { filter, mapTo } from 'rxjs/operators'
import { initialize{{ properCase name }}Async } from 'libs/{{ name }}/action'


export const initialize{{ properCase name }}Epic$: Epic<RootAction, RootAction, RootState> = (action$) =>
    action$.pipe(
    filter(isActionOf(initialize{{ properCase name }}Async.request)),
    // perform side actions
    mapTo(initialize{{ properCase name }}Async.success(true))
    )

    export default combineEpics(initialize{{ properCase name }}Epic$)